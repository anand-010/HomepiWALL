// 4.17.0 0x6c83a05f
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_bck_button[]; // BITMAP_BCK_BUTTON_ID = 0, Size: 35x35 pixels
extern const unsigned char image_bg[]; // BITMAP_BG_ID = 1, Size: 480x272 pixels
extern const unsigned char image_blue_pageindicator_dot_indicator_small_highlight[]; // BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_HIGHLIGHT_ID = 2, Size: 15x15 pixels
extern const unsigned char image_blue_pageindicator_dot_indicator_small_normal[]; // BITMAP_BLUE_PAGEINDICATOR_DOT_INDICATOR_SMALL_NORMAL_ID = 3, Size: 15x15 pixels
extern const unsigned char image_blue_progressindicators_bg_medium_circle_indicator_bg_line_full[]; // BITMAP_BLUE_PROGRESSINDICATORS_BG_MEDIUM_CIRCLE_INDICATOR_BG_LINE_FULL_ID = 4, Size: 104x104 pixels
extern const unsigned char image_blue_slider_horizontal_medium_indicators_slider2_round_nob[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER2_ROUND_NOB_ID = 5, Size: 54x34 pixels
extern const unsigned char image_blue_slider_horizontal_medium_slider2_round_back[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER2_ROUND_BACK_ID = 6, Size: 332x20 pixels
extern const unsigned char image_blue_slider_horizontal_medium_slider2_round_fill[]; // BITMAP_BLUE_SLIDER_HORIZONTAL_MEDIUM_SLIDER2_ROUND_FILL_ID = 7, Size: 332x20 pixels
extern const unsigned char image_bulb_off[]; // BITMAP_BULB_OFF_ID = 8, Size: 76x90 pixels
extern const unsigned char image_bulb_on[]; // BITMAP_BULB_ON_ID = 9, Size: 76x90 pixels
extern const unsigned char image_circular_progress[]; // BITMAP_CIRCULAR_PROGRESS_ID = 10, Size: 150x165 pixels
extern const unsigned char image_config_bg[]; // BITMAP_CONFIG_BG_ID = 11, Size: 480x272 pixels
extern const unsigned char image_config_btn[]; // BITMAP_CONFIG_BTN_ID = 12, Size: 177x75 pixels
extern const unsigned char image_config_icon[]; // BITMAP_CONFIG_ICON_ID = 13, Size: 40x84 pixels
extern const unsigned char image_config_mode_bg[]; // BITMAP_CONFIG_MODE_BG_ID = 14, Size: 272x480 pixels
extern const unsigned char image_curtain_bg[]; // BITMAP_CURTAIN_BG_ID = 15, Size: 184x90 pixels
extern const unsigned char image_curtain_left[]; // BITMAP_CURTAIN_LEFT_ID = 16, Size: 59x55 pixels
extern const unsigned char image_curtain_right[]; // BITMAP_CURTAIN_RIGHT_ID = 17, Size: 59x55 pixels
extern const unsigned char image_fan_off[]; // BITMAP_FAN_OFF_ID = 18, Size: 76x90 pixels
extern const unsigned char image_fan_on[]; // BITMAP_FAN_ON_ID = 19, Size: 76x90 pixels
extern const unsigned char image_green_bg[]; // BITMAP_GREEN_BG_ID = 20, Size: 106x136 pixels
extern const unsigned char image_img_back_shade[]; // BITMAP_IMG_BACK_SHADE_ID = 21, Size: 70x70 pixels
extern const unsigned char image_on_off_bg[]; // BITMAP_ON_OFF_BG_ID = 22, Size: 98x98 pixels
extern const unsigned char image_on_off_btn[]; // BITMAP_ON_OFF_BTN_ID = 23, Size: 202x43 pixels
extern const unsigned char image_settings_icon[]; // BITMAP_SETTINGS_ICON_ID = 24, Size: 40x84 pixels
extern const unsigned char image_side_pannel_bg[]; // BITMAP_SIDE_PANNEL_BG_ID = 25, Size: 40x250 pixels
extern const unsigned char image_slider_background[]; // BITMAP_SLIDER_BACKGROUND_ID = 26, Size: 338x15 pixels
extern const unsigned char image_slider_foreground[]; // BITMAP_SLIDER_FOREGROUND_ID = 27, Size: 338x15 pixels
extern const unsigned char image_slider_knob[]; // BITMAP_SLIDER_KNOB_ID = 28, Size: 34x34 pixels
extern const unsigned char image_wifi_icon[]; // BITMAP_WIFI_ICON_ID = 29, Size: 40x84 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_bck_button, 0, 35, 35, 9, 16, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 3, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_bg, 0, 480, 272, 373, 12, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 25, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_pageindicator_dot_indicator_small_highlight, 0, 15, 15, 3, 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_pageindicator_dot_indicator_small_normal, 0, 15, 15, 3, 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_progressindicators_bg_medium_circle_indicator_bg_line_full, 0, 104, 104, 85, 28, 13, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 48, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_slider_horizontal_medium_indicators_slider2_round_nob, 0, 54, 34, 8, 4, 38, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_slider_horizontal_medium_slider2_round_back, 0, 332, 20, 10, 0, 312, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_slider_horizontal_medium_slider2_round_fill, 0, 332, 20, 10, 0, 312, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_bulb_off, 0, 76, 90, 2, 6, 72, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 78, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_bulb_on, 0, 76, 90, 2, 6, 72, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 78, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_circular_progress, 0, 150, 165, 19, 60, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 40, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_config_bg, 0, 480, 272, 0, 0, 480, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 272, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_config_btn, 0, 177, 75, 13, 2, 145, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 49, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_config_icon, 0, 40, 84, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_config_mode_bg, 0, 272, 480, 0, 0, 272, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 480, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_curtain_bg, 0, 184, 90, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_curtain_left, 0, 59, 55, 31, 18, 15, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 19, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_curtain_right, 0, 59, 55, 13, 18, 15, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 19, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_fan_off, 0, 76, 90, 2, 6, 72, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 78, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_fan_on, 0, 76, 90, 2, 6, 72, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 78, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_green_bg, 0, 106, 136, 4, 8, 98, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 120, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_img_back_shade, 0, 70, 70, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_on_off_bg, 0, 98, 98, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_on_off_btn, 0, 202, 43, 10, 0, 182, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 43, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_settings_icon, 0, 40, 84, 29, 42, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 2, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_side_pannel_bg, 0, 40, 250, 0, 0, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 0, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_slider_background, 0, 338, 15, 7, 0, 324, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 15, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_slider_foreground, 0, 338, 15, 7, 0, 324, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 15, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_slider_knob, 0, 34, 34, 5, 5, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 24, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_wifi_icon, 0, 40, 84, 18, 43, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
