/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/smart_config_mode_screen/smart_config_modeViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

smart_config_modeViewBase::smart_config_modeViewBase() :
    buttonCallback(this, &smart_config_modeViewBase::buttonCallbackHandler)
{

    __background.setPosition(0, 0, 480, 272);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    config_bg.setBitmap(touchgfx::Bitmap(BITMAP_CONFIG_BG_ID));
    config_bg.setPosition(0, 0, 480, 272);
    config_bg.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);

    smart_config_button.setXY(276, 75);
    smart_config_button.setBitmaps(touchgfx::Bitmap(BITMAP_CONFIG_BTN_ID), touchgfx::Bitmap(BITMAP_CONFIG_BTN_ID));
    smart_config_button.setAction(buttonCallback);

    config_back_button.setXY(411, 221);
    config_back_button.setBitmaps(touchgfx::Bitmap(BITMAP_BCK_BUTTON_ID), touchgfx::Bitmap(BITMAP_BCK_BUTTON_ID), touchgfx::Bitmap(BITMAP_BCK_BUTTON_ID), touchgfx::Bitmap(BITMAP_BCK_BUTTON_ID));
    config_back_button.setIconXY(0, 0);
    config_back_button.setAction(buttonCallback);

    add(__background);
    add(config_bg);
    add(smart_config_button);
    add(config_back_button);
}

void smart_config_modeViewBase::setupScreen()
{

}

void smart_config_modeViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &smart_config_button)
    {
        //Interaction2
        //When smart_config_button clicked call virtual function
        //Call smartConfigMode
        smartConfigMode();
    }
    else if (&src == &config_back_button)
    {
        //Interaction1
        //When config_back_button clicked change screen to Screen1
        //Go to Screen1 with screen transition towards East
        application().gotoScreen1ScreenCoverTransitionEast();
    }
}
